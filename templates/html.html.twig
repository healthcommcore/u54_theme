{#
/**
 * @file
 * Default theme implementation to display the basic html structure of a single
 * Drupal page.
 *
 * Variables:
 * - $css: An array of CSS files for the current page.
 * - $language: (object) The language the site is being displayed in.
 *   $language->language contains its textual representation.
 *   $language->dir contains the language direction. It will either be 'ltr' or
 *   'rtl'.
 * - $rdf_namespaces: All the RDF namespace prefixes used in the HTML document.
 * - $grddl_profile: A GRDDL profile allowing agents to extract the RDF data.
 * - $head_title: A modified version of the page title, for use in the TITLE
 *   tag.
 * - $head_title_array: (array) An associative array containing the string parts
 *   that were used to generate the $head_title variable, already prepared to be
 *   output as TITLE tag. The key/value pairs may contain one or more of the
 *   following, depending on conditions:
 *   - title: The title of the current page, if any.
 *   - name: The name of the site.
 *   - slogan: The slogan of the site, if any, and if there is no title.
 * - $head: Markup for the HEAD section (including meta tags, keyword tags, and
 *   so on).
 * - $styles: Style tags necessary to import all CSS files for the page.
 * - $scripts: Script tags necessary to load the JavaScript files and settings
 *   for the page.
 * - $page_top: Initial markup from any modules that have altered the
 *   page. This variable should always be output first, before all other dynamic
 *   content.
 * - $page: The rendered page content.
 * - $page_bottom: Final closing markup from any modules that have altered the
 *   page. This variable should always be output last, after all other dynamic
 *   content.
 * - $classes String of classes that can be used to style contextually through
 *   CSS.
 *
 * @ingroup templates
 *
 * @see bootstrap_preprocess_html()
 * @see template_preprocess()
 * @see template_preprocess_html()
 * @see template_process()
 */
#}
{%
  set body_classes = [
    logged_in ? 'user-logged-in',
    not root_path ? 'path-frontpage' : 'path-' ~ root_path|clean_class,
    node_type ? 'page-node-type-' ~ node_type|clean_class,
    db_offline ? 'db-offline',
    theme.settings.navbar_position ? 'navbar-is-' ~ theme.settings.navbar_position,
    theme.has_glyphicons ? 'has-glyphicons',
  ]
%}
<!DOCTYPE html>
<html {{ html_attributes }}>
  <head>
    <head-placeholder token="{{ placeholder_token|raw }}">
    <title>{{ head_title|safe_join(' | ') }}</title>
    <css-placeholder token="{{ placeholder_token|raw }}">
    <js-placeholder token="{{ placeholder_token|raw }}">
    <link rel="stylesheet" href="https://use.typekit.net/aqi7ktf.css">
  </head>
  <body{{ attributes.addClass(body_classes) }}>
    <a href="#main-content" class="visually-hidden focusable skip-link">
      {{ 'Skip to main content'|t }}
    </a>
    {{ page_top }}
    {{ page }}
    {{ page_bottom }}
    <js-bottom-placeholder token="{{ placeholder_token|raw }}">
    <script>
      ( function($) {
        $(document).ready( function() {

          // Anything with the "nolink" class should be an anchor that
          // should have its default linking behavior removed. This is to
          // allow the "Read more" dropdown functionality
          $('.nolink').on('click', function (e) {
            e.preventDefault();
          });

          var form = $('#views-exposed-form-resource-search-page-1');
          var checkboxes = form.find('input[type="checkbox"]');

          // When Resource Finder page loads either from first entering or
          // upon filter form submission, determine if any checkboxes are checked
          // and show/hide the corresponding results warning text box
          if ( !isEmpty(checkboxes) ) {
            $('#filter-explanation').removeClass('show').addClass('hidden');
            $('#search-results').removeClass('hidden').addClass('show');
            $('.view-content').show();
          }
          else {
            $('#filter-explanation').removeClass('hidden').addClass('show');
            $('#search-results').removeClass('show').addClass('hidden');
            $('.view-content').hide();
          }

          // Check to make sure at least one of the filter category checkboxes were
          // checked. If not, do nothing and display warning
          form.on('submit', function (e) {
            //console.log(e.originalEvent.explicitOriginalTarget.id);
            if (e.originalEvent.explicitOriginalTarget.id != "edit-reset" && isEmpty(checkboxes) ) {
              console.log("Nothing was checked");
              e.preventDefault();
            }
          });

          // Iterate through all filter category checkboxes to see if any of them are checked
          function isEmpty(checkboxes) {
            var isEmpty = true;
            checkboxes.map( function() {
              if ( $(this).is(":checked") ) {
                isEmpty = false;
                return;
              }
            });
            return isEmpty;
          }
        });

      })(jQuery);
    </script>
  </body>
</html>
